import { ImageResponse } from 'next/og';
import { NextRequest } from 'next/server';

export const runtime = 'edge';

const font = fetch(new URL('../../../assets/fonts/CalSans-SemiBold.ttf', import.meta.url)).then(
  (res) => res.arrayBuffer(),
);

export async function GET(req: NextRequest) {
  try {
    const fontData = await font;
    const { searchParams } = new URL(req.url);

    const imageData = await fetch(
      new URL('../../../assets/images/og-background.jpeg', import.meta.url),
    )
      .then((res) => res.arrayBuffer())
      .then((buf) => `data:image/jpeg;base64,${Buffer.from(buf).toString('base64')}`);

    // ?title=<title>
    const hasTitle = searchParams.has('title');
    const title = hasTitle ? searchParams.get('title')?.slice(0, 100) : 'My default title';

    return new ImageResponse(
      (
        <div
          tw="h-full w-full flex items-center justify-center bg-gray-100"
          style={{ backgroundImage: `url(${imageData})` }}>
          <div tw="flex items-center justify-center h-full">
            <div tw="flex flex-col gap-16 justify-center items-center w-full h-full p-20">
              <svg
                version="1.1"
                id="Layer_1"
                xmlns="http://www.w3.org/2000/svg"
                viewBox="0 0 512 512"
                width="110"
                height="110">
                <g
                  transform="translate(0.000000,512.000000) scale(0.100000,-0.100000)"
                  fill="#000000"
                  stroke="none">
                  <path
                    d="M3821 5103 c-14 -12 -48 -92 -97 -233 -42 -118 -79 -218 -83 -221 -3
-4 -49 4 -101 18 -72 19 -130 27 -237 30 -233 9 -397 -28 -619 -140 -150 -75
-220 -97 -334 -104 -128 -8 -223 17 -394 102 -218 107 -368 145 -577 145 -181
0 -337 -35 -501 -112 -95 -44 -117 -72 -99 -119 23 -61 60 -62 187 -5 123 55
221 77 367 83 212 9 351 -23 569 -134 169 -84 248 -105 408 -107 166 -1 248
19 407 100 232 119 356 149 578 141 141 -6 240 -21 230 -37 -3 -4 -60 -38
-128 -75 -128 -69 -157 -93 -157 -129 0 -41 30 -64 199 -156 l169 -91 30 -82
c16 -45 58 -162 92 -260 35 -98 72 -189 82 -203 26 -32 77 -33 105 -1 11 12
59 135 108 272 48 138 91 254 95 258 19 21 95 -130 135 -268 18 -61 27 -117
28 -175 l2 -84 -43 -24 c-76 -42 -80 -104 -9 -148 23 -15 43 -28 44 -29 8 -6
-44 -273 -78 -404 -73 -285 -163 -538 -404 -1146 -278 -703 -367 -973 -424
-1297 -34 -189 -75 -274 -148 -304 -45 -19 -87 -17 -132 6 -107 54 -171 207
-346 830 -94 333 -115 381 -196 454 -73 66 -143 89 -249 84 -99 -5 -165 -33
-229 -97 -68 -68 -88 -116 -187 -462 -158 -552 -203 -673 -281 -760 -66 -73
-135 -87 -209 -44 -55 32 -97 115 -119 235 -53 284 -101 467 -195 729 -33 91
-57 168 -54 172 2 4 82 49 177 100 94 51 182 103 195 116 32 32 29 75 -6 105
-16 12 -108 66 -205 118 l-176 95 -102 290 c-56 160 -108 300 -115 312 -7 12
-27 24 -44 28 -46 10 -75 -14 -101 -85 -12 -34 -25 -57 -29 -53 -13 15 -107
297 -153 458 -93 325 -122 519 -114 753 4 130 9 172 31 247 33 110 101 250
161 330 54 72 59 112 19 144 -53 42 -83 27 -153 -74 -71 -103 -146 -263 -178
-382 -25 -91 -27 -113 -27 -313 -1 -164 3 -241 17 -325 39 -233 139 -579 263
-914 30 -79 54 -154 53 -165 0 -12 -19 -73 -42 -136 l-42 -115 -195 -106
c-156 -85 -197 -112 -206 -135 -24 -59 -9 -73 204 -189 l197 -108 105 -296
c58 -163 113 -304 122 -313 24 -24 80 -23 102 1 9 10 44 93 76 182 32 90 63
175 68 188 8 23 10 22 26 -25 74 -212 125 -400 156 -569 36 -203 72 -296 147
-376 64 -69 120 -93 218 -93 68 -1 88 3 131 26 28 15 73 51 101 81 102 112
164 270 315 802 50 176 97 334 105 350 20 40 71 93 108 112 69 36 182 10 236
-54 38 -45 53 -89 143 -409 115 -407 149 -510 212 -642 107 -222 248 -308 421
-257 97 29 169 103 219 225 13 32 40 139 59 237 67 333 128 517 410 1233 201
511 253 651 326 875 56 170 118 412 144 558 10 54 21 95 26 90 4 -4 33 -80 64
-168 70 -195 79 -213 110 -221 35 -9 72 3 84 25 6 10 42 107 80 215 75 210 77
227 29 260 -54 38 -97 5 -133 -104 -15 -44 -30 -82 -34 -84 -4 -3 -20 34 -36
81 -32 92 -48 109 -134 153 -49 24 -49 24 30 65 60 31 69 43 105 144 l32 86
14 -35 c8 -19 22 -58 32 -86 9 -28 27 -60 39 -71 35 -32 266 -153 291 -153 23
0 58 32 69 63 14 38 -15 67 -130 129 -63 34 -118 69 -123 77 -4 9 -33 86 -63
171 -30 85 -58 162 -62 171 -7 19 -47 39 -75 39 -36 0 -56 -35 -115 -201 -32
-90 -62 -168 -67 -174 -4 -5 -8 8 -8 30 -1 96 -54 274 -124 412 -20 40 -36 75
-36 77 0 3 43 28 95 57 99 53 125 77 125 117 0 36 -34 61 -207 155 l-161 87
-26 73 c-14 39 -57 160 -96 267 -71 200 -89 230 -135 230 -13 0 -32 -8 -44
-17z m113 -478 c38 -107 65 -167 80 -181 13 -12 72 -47 131 -79 59 -31 103
-61 98 -65 -4 -4 -55 -34 -113 -65 -58 -32 -112 -64 -121 -72 -9 -8 -45 -95
-80 -193 -34 -99 -63 -179 -64 -177 -1 1 -30 81 -64 177 -34 96 -70 183 -79
192 -9 9 -64 42 -122 73 -58 31 -109 60 -113 65 -5 4 36 31 90 60 161 87 151
74 223 275 39 109 66 172 70 164 5 -8 33 -86 64 -174z m-3124 -2665 c40 -115
80 -212 91 -222 11 -9 70 -44 132 -77 173 -92 172 -75 8 -165 -78 -42 -147
-87 -155 -99 -7 -12 -44 -111 -82 -219 -38 -108 -72 -192 -75 -185 -4 7 -37
98 -74 202 -37 105 -71 197 -75 206 -5 8 -62 44 -127 79 -65 35 -131 71 -146
81 l-28 17 133 72 c73 39 142 81 154 93 12 12 45 90 74 172 73 208 92 257 95
253 1 -2 35 -95 75 -208z"
                  />
                  <path
                    d="M1285 4283 c-129 -18 -295 -92 -397 -178 -166 -139 -278 -365 -278
-562 0 -83 18 -113 69 -113 54 0 71 25 81 123 16 159 74 285 179 392 109 111
253 179 405 192 95 8 120 24 120 78 0 67 -50 86 -179 68z"
                  />
                </g>
              </svg>

              <div tw="flex flex-col items-center">
                <h1 tw="text-7xl text-gray-900 font-bold text-center mb-0 leading-tight capitalize">
                  {title}
                </h1>
                <p tw="text-violet-700 font-semibold capitalize mt-4 text-2xl text-center">
                  dentalclinicclosetome.my
                </p>
              </div>
            </div>
          </div>
        </div>
      ),
      {
        width: 1200,
        height: 630,
        fonts: [
          {
            name: 'Cal Sans',
            data: fontData,
            style: 'normal',
          },
        ],
      },
    );
  } catch (e: any) {
    console.log(`${e.message}`);
    return new Response(`Failed to generate the image`, {
      status: 500,
    });
  }
}
